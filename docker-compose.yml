services:
  front:
    container_name: front
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - '${APP_PORT}:${APP_PORT}'
    volumes:
      - ./front:/app
      - /app/node_modules
    depends_on:
      - back

  back:
    container_name: back
    build:
      context: ./back
      dockerfile: Dockerfile
    ports:
      - '3001:3001'
    volumes:
      - ./back:/app
      - /app/node_modules
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - API_PORT=${API_PORT}
      - APP_HOST=${APP_HOST}
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: postgres
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '${DB_PORT}:${DB_PORT}'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data:
